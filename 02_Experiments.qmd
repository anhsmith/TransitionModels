---
title: "Quantile model"
author: "Adam Smith"
format: html
---

```{r}
library(tidyverse)
library(rstan)
library(tidybayes)
library(modelr)
```



# Simulate data

## Transition probability function of x

```{r}
transition_prob = function(x, mu=0, sd=1) pnorm(x, mean = mu, sd = sd)
```

## Sampling

```{r}
n0 = 20
n1 = 80

minimum=200
maximum=1400
mu = 600
sd = 30

d = tibble(
  x = c(runif(n = n0, min=minimum, max=mu),
        runif(n = n1, min=mu, max=maximum)), 
  p = x |> transition_prob(mu=mu,sd=sd),
  y = rbinom(n=sum(n0,n1), prob=p, size=1)
  )
  
```

## Plot

```{r}
plot(y~x,data=d)
```

```{r}
plot(y~x,data=d, col=(1-y)+1)

gridx = seq(minimum,maximum,length=100)

lines(x = gridx,
      y = transition_prob(gridx-mu, sd=sd))

lines(x = gridx,
      y = 1 - transition_prob(gridx-mu, sd=sd),
      col=2)
```

# Model


$$
\begin{align}\\
P(y = 1 | x) &= \Phi(\frac{x - \mu}{\sigma} ) \\
P(y = 0 | x) &= 1 - \Phi(\frac{x + \mu}{\sigma} ) \\
OR\\
P(y = 1 | x) &= \Phi(x - \mu ) \\
P(y = 0 | x) &= 1 - \Phi(x + \mu) \\
\end{align}\\
$$

# Fit model



## stan_d

```{r}
stan_d <- stan_model(file = 'model_d.stan')
```


### sample size 40,10

#### make data

```{r}
n0 = 10
n1 = 40

minimum=200
maximum=1400
mu = 600
sd = 30

d = tibble(
  x = c(runif(n = n0, min=minimum, max=mu),
        runif(n = n1, min=mu, max=maximum)), 
  p = x |> transition_prob(mu=mu,sd=sd),
  y = rbinom(n=sum(n0,n1), prob=p, size=1)
  )
  
```

```{r}
N_test <- 100
x_test <- seq(300,900,length=N_test)
datstan <- list(N = nrow(d),
                x = d$x,
                y = d$y,
                prior_tr_mu=600,
                prior_tr_sd=100,
                prior_sigma_scale=50,
                N_test=N_test,
                x_test=x_test)
```

#### fit model


<!-- ```{r} -->
<!-- inits = list(list(transition=rnorm(1,mean=600,sd=50))) -->

<!-- fit_d <- sampling(stan_d, data = datstan,  -->
<!--                   init=inits, chains=1)  -->
<!-- print(fit_d, pars = c("transition", "sigma")) -->
<!-- ``` -->


```{r}
inits = list(list(transition=580),
             list(transition=590),
             list(transition=610),
             list(transition=620))

fit_d <- sampling(stan_d, data = datstan, 
                  init=inits, chains=4)

print(fit_d, pars = c("transition", "sigma"))
```

#### Plot

```{r}
p_d <- spread_draws(fit_d, 
             p[i], 
             ndraws=500) |> 
  mutate(x = x_test[i]) |> 
  ggplot() +
  geom_line(aes(x=x,y=p,group=.draw), alpha=.05) +
  geom_point(aes(x=x,y=y), data=d, col=2)+
  geom_vline(xintercept=600, col="white")
  
```


#### brms logistic regression model

```{r}
library(brms)
b_d <- brm(y~x, family=bernoulli, data = d)
```

```{r}
pb_d <- d |> 
  data_grid(x=seq_range(x,n=101)) |> 
  add_epred_draws(b_d, ndraws=500) |> 
  ggplot() +
  aes(x = x, y = y) +
  geom_line(aes(y = .epred, group=.draw), alpha = .05) +
  geom_point(data = d) +
  geom_vline(xintercept=600, col="white")

```

#### Compare stan probit vs brms logit models

```{r}
p_d
pb_d
```


### sample size 80,20

#### make data

```{r}
n0 = 20
n1 = 80

minimum=200
maximum=1400
mu = 600
sd = 30

d = tibble(
  x = c(runif(n = n0, min=minimum, max=mu),
        runif(n = n1, min=mu, max=maximum)), 
  p = x |> transition_prob(mu=mu,sd=sd),
  y = rbinom(n=sum(n0,n1), prob=p, size=1)
  )
  
```

```{r}
N_test <- 100
x_test <- seq(300,900,length=N_test)
datstan <- list(N = nrow(d),
                x = d$x,
                y = d$y,
                prior_tr_mu=600,
                prior_tr_sd=100,
                prior_sigma_scale=50,
                N_test=N_test,
                x_test=x_test)
```

#### fit model


<!-- ```{r} -->
<!-- inits = list(list(transition=rnorm(1,mean=600,sd=50))) -->

<!-- fit_d <- sampling(stan_d, data = datstan,  -->
<!--                   init=inits, chains=1)  -->
<!-- print(fit_d, pars = c("transition", "sigma")) -->
<!-- ``` -->


```{r}
inits = list(list(transition=580),
             list(transition=590),
             list(transition=610),
             list(transition=620))

fit_d <- sampling(stan_d, data = datstan, 
                  init=inits, chains=4)

print(fit_d, pars = c("transition", "sigma"))
```

#### Plot

```{r}
p_d <- spread_draws(fit_d, 
             p[i], 
             ndraws=500) |> 
  mutate(x = x_test[i]) |> 
  ggplot() +
  geom_line(aes(x=x,y=p,group=.draw), alpha=.05) +
  geom_point(aes(x=x,y=y), data=d, col=2)+
  geom_vline(xintercept=600, col="white")
  
```


#### brms logistic regression model

```{r}
library(brms)
b_d <- brm(y~x, family=bernoulli, data = d)
```

```{r}
pb_d <- d |> 
  data_grid(x=seq_range(x,n=101)) |> 
  add_epred_draws(b_d, ndraws=500) |> 
  ggplot() +
  aes(x = x, y = y) +
  geom_line(aes(y = .epred, group=.draw), alpha = .05) +
  geom_point(data = d) +
  geom_vline(xintercept=600, col="white")

```

#### Compare stan probit vs brms logit models

```{r}
p_d
pb_d
```


# Other crap

<!-- ## stan_b -->

<!-- ```{r} -->
<!-- model_b <- stan_model(file = 'model_b.stan') -->
<!-- ``` -->


<!-- ```{r} -->
<!-- datstan <- list(N = nrow(d), -->
<!--                 X = d$x, -->
<!--                 y = d$m ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- fit_b <- sampling(model_b, data=datstan) -->
<!-- ``` -->


<!-- ## stan_e -->

<!-- ```{r} -->
<!-- stan_e <- stan_model(file = 'model_e.stan') -->
<!-- ``` -->


<!-- ```{r} -->
<!-- datstan <- list(N = nrow(d), -->
<!--                 x = d$x, -->
<!--                 y = d$y, -->
<!--                 prior_tr_mu=600, -->
<!--                 prior_tr_sd=200) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- fit_e <- sampling(stan_e, data = datstan, -->
<!--                   control=list(adapt_alpha=.99)) -->
<!-- ``` -->


<!-- ## stan_c -->

<!-- ```{r} -->
<!-- stan_c <- stan_model(file = 'model_c.stan') -->
<!-- ``` -->


<!-- ```{r} -->
<!-- datstan <- list(N = nrow(d), -->
<!--                 x = d$x, -->
<!--                 y = d$y, -->
<!--                 prior_tr_mu=600, -->
<!--                 prior_tr_sd=200, -->
<!--                 prior_sigma=5) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- fit_c <- sampling(stan_c, data = datstan) -->
<!-- ``` -->

<!-- ## Bad change point model -->

<!-- ```{r} -->
<!-- datstan <- list(N = nrow(d), -->
<!--                 x = d$x, -->
<!--                 y = d$y, -->
<!--                 mu_guess=600, -->
<!--                 sd_mu=100) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- cp_stan <- stan_model(file = 'model_cp_a.stan') -->
<!-- ``` -->

<!-- ```{r} -->
<!-- fitCP <- sampling(cp_stan, data = datstan) -->
<!-- ``` -->



