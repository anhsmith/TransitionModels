prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz1 <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz1_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz1)
post_d_nz1 <- get_estimates(fit_d_nz1, d_nz1_list$L, d_nz1_list$U)
plot_cutpoint_estimates(post_d_nz1)
plot_dist_transition(post_d_nz1, d_nz1, d_nz1_list$L, d_nz1_list$U)
L = 1050
U = 1650
d_nz2 <- dat |>
filter(Length > L & Length < U) |>
filter(Population == "New Zealand" & Sex == "M") |>
transmute(
x = Length,
y = as.numeric(Stage == 3 )
)
d_nz2_list <- list(
N = nrow(d_nz2),
x = d_nz2$x,
y = d_nz2$y,
L = L,
U = U,
prior_m50_mu = prior_m50_mu,
prior_m50_tau = prior_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz2 <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz2_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz2)
post_d_nz2 <- get_estimates(fit_d_nz2, d_nz2_list$L, d_nz2_list$U)
plot_cutpoint_estimates(post_d_nz2)
plot_dist_transition(post_d_nz2, d_nz2, d_nz2_list$L, d_nz2_list$U)
L = 900
U = 1650
d_nz3 <- dat |>
filter(Length > L & Length < U) |>
filter(Population == "New Zealand" & Sex == "M") |>
transmute(
x = Length,
y = as.numeric(Stage == 3 )
)
d_nz3_list <- list(
N = nrow(d_nz3),
x = d_nz3$x,
y = d_nz3$y,
L = L,
U = U,
prior_m50_mu = prior_m50_mu,
prior_m50_tau = prior_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz3 <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz3_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz3)
post_d_nz3 <- get_estimates(fit_d_nz3, d_nz3_list$L, d_nz3_list$U)
plot_cutpoint_estimates(post_d_nz3)
plot_dist_transition(post_d_nz3, d_nz3, d_nz3_list$L, d_nz3_list$U)
ggplot() +
geom_hline(yintercept = 0) +
geom_density(
data = d_nz3,
mapping = aes(x = x, colour = factor(y), group = factor(y)),
) +
geom_point(
data = d_nz3 |> filter(y == 0),
mapping = aes(x = x, y = -.0008),
shape = "|",
alpha = .5,
colour = "#00BFC4"
) +
geom_point(
data = d_nz3 |> filter(y == 1),
mapping = aes(x = x, y = -.0004),
shape = "|",
alpha = .5,
colour = "#F8766D"
) +
# xlim(1050,1550) +
ylab("Posterior probability of maturity") +
ggtitle("NZ data (truncated 900 to 1650)")
L = 400
U = 1650
d_nz4 <- dat |>
filter(Length > L & Length < U) |>
filter(Population == "New Zealand" & Sex == "M") |>
transmute(
x = Length,
y = as.numeric(Stage == 3 )
)
d_nz4_list <- list(
N = nrow(d_nz4),
x = d_nz4$x,
y = d_nz4$y,
L = L,
U = U,
prior_m50_mu = prior_m50_mu,
prior_m50_tau = prior_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz4 <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz4_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz4)
post_d_nz4 <- get_estimates(fit_d_nz4, d_nz4_list$L, d_nz4_list$U)
plot_cutpoint_estimates(post_d_nz4)
plot_dist_transition(post_d_nz4, d_nz4, d_nz4_list$L, d_nz4_list$U)
d_nz1_list$L; d_nz1_list$U
d_nz2_list$L; d_nz2_list$U
d_nz3_list$L; d_nz3_list$U
d_nz4_list$L; d_nz4_list$U
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
)
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer()
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer(everything)
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer(everything())
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer(everything()) |>
ggplot() +
aes(x=value, colour=name) +
geom_density()
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer(everything(), names_to = "Model", values_to = "Transition point") |>
ggplot() +
aes(x=`Transition point`, colour=`Model`) +
geom_density() +
ylab("Posterior density")
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
) |>
pivot_longer(everything(), names_to = "Truncation values", values_to = "Transition point") |>
ggplot() +
aes(x=`Transition point`, colour=`Truncation values`) +
geom_density() +
ylab("Posterior density")
### Fit model
```{r}
L = 900
U = 1550
d_nz3b <- dat |>
filter(Length > L & Length < U) |>
filter(Population == "New Zealand" & Sex == "M") |>
transmute(
x = Length,
y = as.numeric(Stage == 3 )
)
d_nz3b_list <- list(
N = nrow(d_nz3b),
x = d_nz3b$x,
y = d_nz3b$y,
L = L,
U = U,
prior_m50_mu = prior_m50_mu,
prior_m50_tau = prior_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz3b <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz3b_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz3b)
post_d_nz3b <- get_estimates(fit_d_nz3b, d_nz3b_list$L, d_nz3b_list$U)
plot_cutpoint_estimates(post_d_nz3b)
plot_dist_transition(post_d_nz3b, d_nz3b, d_nz3b_list$L, d_nz3b_list$U)
ggplot() +
geom_hline(yintercept = 0) +
geom_density(
data = d_nz3b,
mapping = aes(x = x, colour = factor(y), group = factor(y)),
) +
geom_point(
data = d_nz3b |> filter(y == 0),
mapping = aes(x = x, y = -.0008),
shape = "|",
alpha = .5,
colour = "#00BFC4"
) +
geom_point(
data = d_nz3b |> filter(y == 1),
mapping = aes(x = x, y = -.0004),
shape = "|",
alpha = .5,
colour = "#F8766D"
) +
# xlim(1050,1550) +
ylab("Posterior probability of maturity") +
ggtitle("NZ data (truncated 900 to 1550)")
L = 400
U = 1550
d_nz4b <- dat |>
filter(Length > L & Length < U) |>
filter(Population == "New Zealand" & Sex == "M") |>
transmute(
x = Length,
y = as.numeric(Stage == 3 )
)
d_nz4b_list <- list(
N = nrow(d_nz4b),
x = d_nz4b$x,
y = d_nz4b$y,
L = L,
U = U,
prior_m50_mu = prior_m50_mu,
prior_m50_tau = prior_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_mu = prior_sigma_mu,
prior_sigma_tau = prior_sigma_tau
)
fit_d_nz4b <- sampling(
stan_uniform_gaussian_twogroups,
data = d_nz4b_list,
chains = 4,
cores = 4,
control = list(adapt_delta = 0.95)
)
# Extract and summarize results
print(fit_d_nz4b)
post_d_nz4b <- get_estimates(fit_d_nz4b, d_nz4b_list$L, d_nz4b_list$U)
plot_cutpoint_estimates(post_d_nz4b)
plot_dist_transition(post_d_nz4b, d_nz4b, d_nz4b_list$L, d_nz4b_list$U)
d_nz3b_list$L; d_nz3b_list$U
d_nz4b_list$L; d_nz4b_list$U
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 900, U = 1550" = extract(fit_d_nz3b)$m50, # d_nz3b_list$L; d_nz3b_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50  # d_nz4_list$L; d_nz4_list$U
"L = 400, U = 1550" = extract(fit_d_nz4b)$m50  # d_nz4b_list$L; d_nz4b_list$U
bind_cols(
"L = 1050, U = 1550" = extract(fit_d_nz1)$m50, # d_nz1_list$L; d_nz1_list$U
"L = 1050, U = 1650" = extract(fit_d_nz2)$m50, # d_nz2_list$L; d_nz2_list$U
"L = 900, U = 1650" = extract(fit_d_nz3)$m50, # d_nz3_list$L; d_nz3_list$U
"L = 900, U = 1550" = extract(fit_d_nz3b)$m50, # d_nz3b_list$L; d_nz3b_list$U
"L = 400, U = 1650" = extract(fit_d_nz4)$m50,  # d_nz4_list$L; d_nz4_list$U
"L = 400, U = 1550" = extract(fit_d_nz4b)$m50  # d_nz4b_list$L; d_nz4b_list$U
) |>
pivot_longer(everything(), names_to = "Truncation values", values_to = "Transition point") |>
ggplot() +
aes(x=`Transition point`, colour=`Truncation values`) +
geom_density() +
ylab("Posterior density")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
rstan:::rstudio_stanc("uniform_gaussian_Jpopulations.stan")
stan_uniform_gaussian_Jpopulations <- stan_model(file = 'uniform_gaussian_Jpopulations.stan')
d_pop <- dat |>
filter(Length > 1050 & Length < 1550 & Sex == "M" & Population != "Northeast Pacific") |>
transmute(
x = Length,
y = as.numeric(Stage == 3),
pop = Population |> as.factor() |> as.numeric()
)
L = 1050
U = 1550
d_pop <- dat |>
filter(Length > L & Length < U & Sex == "M" & Population != "Northeast Pacific") |>
transmute(
x = Length,
y = as.numeric(Stage == 3),
pop = Population |> as.factor() |> as.numeric()
)
d_pop_list <- list(
N = nrow(d_pop),
x = d_pop$x,
y = d_pop$y,
pop = d_pop$pop,
J = n_distinct(d_pop$pop),
U = U,
L = L,
prior_mu_m50_mu = prior_mu_m50_mu,
prior_mu_m50_sigma = prior_mu_m50_sigma,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_x_tau = prior_sigma_x_tau,
prior_sigma_alpha_tau = prior_sigma_alpha_tau
),
d_pop_list <- list(
N = nrow(d_pop),
x = d_pop$x,
y = d_pop$y,
pop = d_pop$pop,
J = n_distinct(d_pop$pop),
U = U,
L = L,
prior_mu_m50_mu = prior_mu_m50_mu,
prior_mu_m50_sigma = prior_mu_m50_sigma,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_x_tau = prior_sigma_x_tau,
prior_sigma_alpha_tau = prior_sigma_alpha_tau
)
prior_mu_m50_mu = 1300
prior_mu_m50_sigma = 50
prior_d_mu = 0
prior_d_tau = 100
prior_sigma_x_tau = 50
prior_sigma_alpha_tau = 50
d_pop_list <- list(
N = nrow(d_pop),
x = d_pop$x,
y = d_pop$y,
pop = d_pop$pop,
J = n_distinct(d_pop$pop),
U = U,
L = L,
prior_mu_m50_mu = prior_mu_m50_mu,
prior_mu_m50_sigma = prior_mu_m50_sigma,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_x_tau = prior_sigma_x_tau,
prior_sigma_alpha_tau = prior_sigma_alpha_tau
)
popkey <- dat |>
filter( Population != "Northeast Pacific" ) |>
transmute(
pop = Population |> as.factor() |> as.numeric(),
key = Population
) |>
unique() |>
arrange(pop)
popkey
fit_d_pop <- sampling(
stan_uniform_gaussian_Jpopulations,
data = d_pop_list,
chains = 4,
# iter = 2000,
# warmup = 500,
cores = 4,
control = list(adapt_delta = 0.95)
)
rm(prior_mu_m50_sigma)
d_pop_list <- list(
N = nrow(d_pop),
x = d_pop$x,
y = d_pop$y,
pop = d_pop$pop,
J = n_distinct(d_pop$pop),
U = U,
L = L,
prior_mu_m50_mu = prior_mu_m50_mu,
prior_mu_m50_tau = prior_mu_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_x_tau = prior_sigma_x_tau,
prior_sigma_alpha_tau = prior_sigma_alpha_tau
)
prior_mu_m50_mu = 1300
prior_mu_m50_tau = 50
prior_d_mu = 0
prior_d_tau = 100
prior_sigma_x_tau = 50
prior_sigma_alpha_tau = 50
d_pop_list <- list(
N = nrow(d_pop),
x = d_pop$x,
y = d_pop$y,
pop = d_pop$pop,
J = n_distinct(d_pop$pop),
U = U,
L = L,
prior_mu_m50_mu = prior_mu_m50_mu,
prior_mu_m50_tau = prior_mu_m50_tau,
prior_d_mu = prior_d_mu,
prior_d_tau = prior_d_tau,
prior_sigma_x_tau = prior_sigma_x_tau,
prior_sigma_alpha_tau = prior_sigma_alpha_tau
)
fit_d_pop <- sampling(
stan_uniform_gaussian_Jpopulations,
data = d_pop_list,
chains = 4,
# iter = 2000,
# warmup = 500,
cores = 4,
control = list(adapt_delta = 0.95)
)
fit_d_pop
check_hmc_diagnostics(fit_d_pop)
fit_d_pop |>
mcmc_pairs(
pars = c(
"mu_m50",
# "m50_pop[1]", "m50_pop[2]","m50_pop[3]","m50_pop[4]","m50_pop[5]","m50_pop[6]",
"d", "sigma_x", "sigma_alpha")
)
#| fig-width: 20
#| fig-height: 20
fit_d_pop |>
mcmc_pairs(
pars = c(
"mu_m50",
"m50_pop[1]", "m50_pop[2]","m50_pop[3]","m50_pop[4]","m50_pop[5]"
# "d", "sigma_x", "sigma_alpha"
)
)
#| fig-width: 20
#| fig-height: 20
fit_d_pop |>
mcmc_pairs(
pars = c(
"mu_m50",
"alpha[1]", "alpha[2]","alpha[3]","alpha[4]","alpha[5]",
"d",
"sigma_x",
"sigma_alpha"
)
)
mcmc_areas(
fit_d_pop |> as.matrix(),
pars = c("mu_m50", "m50_pop[1]", "m50_pop[2]", "m50_pop[3]", "m50_pop[4]", "m50_pop[5]"),
prob = 0.8
) +
scale_y_discrete(
labels = c(
"mu_m50" = "Overall mean",
"m50_pop[1]" = popkey$key[1],
"m50_pop[2]" = popkey$key[2],
"m50_pop[3]" = popkey$key[3],
"m50_pop[4]" = popkey$key[4],
"m50_pop[5]" = popkey$key[5])) +
xlab("Transition length")
stan_uniform_gaussian_Jpopulations |> get_stancode()
stan_uniform_gaussian_Jpopulations |> get_stancode() |> cat()
stan_uniform_gaussian_twogroups |> get_stancode() |> cat()
uniform_left_gaussian_density
